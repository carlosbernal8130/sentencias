
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.*;
import java.util.function.Function;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.AbstractListModel;
import java.awt.SystemColor;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author carlos
 */
public class sentencias extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

	/**
     * Creates new form sentencias
     */
    public sentencias() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(sentencias.class.getResource("/Imagenes/database.png")));
        btnGenerar.setMnemonic(KeyEvent.VK_G);
        btnLimpiar.setMnemonic(KeyEvent.VK_L);
        btnCopiar.setMnemonic(KeyEvent.VK_C);
        this.getContentPane().setBackground(Color.black);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSentencias = new javax.swing.JLabel();
        cbSentencias = new javax.swing.JComboBox<>();
        cbSentencias.setForeground(Color.GREEN);
        cbSentencias.setBackground(SystemColor.textText);
        jLabel1 = new javax.swing.JLabel();
        txtAportante = new javax.swing.JTextField();
        txtAportante.setForeground(new Color(255, 255, 255));
        txtAportante.setBackground(SystemColor.textText);
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlPeriodo = new javax.swing.JList<>();
        jlPeriodo.setForeground(new Color(255, 255, 255));
        jlPeriodo.setBackground(SystemColor.textText);
        btnGenerar = new javax.swing.JButton();
        btnGenerar.setForeground(new Color(255, 255, 255));
        btnGenerar.setBackground(SystemColor.textText);
        btnLimpiar = new javax.swing.JButton();
        btnLimpiar.setForeground(new Color(255, 255, 255));
        btnLimpiar.setBackground(SystemColor.textText);
        jScrollPane2 = new javax.swing.JScrollPane();
        txtVisualizar = new javax.swing.JTextArea();
        btnCopiar = new javax.swing.JButton();
        btnCopiar.setForeground(new Color(255, 255, 255));
        btnCopiar.setBackground(SystemColor.textText);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sentencias");
        setResizable(false);

        lblSentencias.setForeground(new java.awt.Color(255, 255, 255));
        lblSentencias.setText("Sentencia:");

        cbSentencias.setModel(new DefaultComboBoxModel<String>(new String[] {"Consulta General", "Conteo y Validaciones", "Reversar Parámetros Davivienda", "Validación SMS", "DUMP Asistida", "ELIMINAR Asistida", "DUMP Electrónica", "ELIMINAR Electrónica", "DUMP Pensionados", "ELIMINAR Pensionados", "DUMP Cesantias", "ELIMINAR Cesantias", "Creación de carpetas", "Crear Carpetas Validación"}));
        cbSentencias.addItemListener(new java.awt.event.ItemListener() {
            @Override
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSentenciasItemStateChanged(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Aportante:");

        txtAportante.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
			public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAportanteKeyTyped(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Periodo:");

        jlPeriodo.setModel(new AbstractListModel() {
        	private static final long serialVersionUID = 1L;
			String[] values = new String[] {"2024", "2025", "2024 y 2025"};
        	public int getSize() {
        		return values.length;
        	}
        	public Object getElementAt(int index) {
        		return values[index];
        	}
        });
        jlPeriodo.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlPeriodo.setToolTipText("");
        jScrollPane1.setViewportView(jlPeriodo);

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        txtVisualizar.setBackground(new java.awt.Color(0, 0, 0));
        txtVisualizar.setColumns(20);
        txtVisualizar.setForeground(new java.awt.Color(0, 255, 0));
        txtVisualizar.setLineWrap(true);
        txtVisualizar.setRows(5);
        jScrollPane2.setViewportView(txtVisualizar);

        btnCopiar.setText("Copiar");
        btnCopiar.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(btnCopiar)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSentencias)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSentencias, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(txtAportante, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGenerar)
                    .addComponent(btnLimpiar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSentencias)
                    .addComponent(cbSentencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGenerar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimpiar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtAportante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCopiar)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    String consulta;

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        switch (cbSentencias.getSelectedIndex()){
            case 0:
                if (txtAportante.getText().length()>0 && jlPeriodo.isSelectedIndex(0)) {
                    consulta = "select cab_fecha_trab, cab_fecha_vencimiento, cab_usuario, cab_num_planilla as planilla, cab_pin as pin, cab_tipo_planilla as tipo, cab_tipo_ide as tip, cab_num_ide as num, cab_sucursal as suc, cab_estado as estado, cab_indpago as ind, cab_per_pension_ano as ano, cab_per_pension_mes as mes, t11_total_salud as salud, t11_total_pension as pension, t11_total_arp as arp, t11_total_ccf as ccf, t11_gran_total as total_pago, cab_fecha_pago as fecha_pago, cab_hora_trab_pago as hora_pago, cab_entidad_recaudo entidad_recaudo, cab_clase_entidad as clase_entidad from cabeza_planilla,registro_tipo_11 where cab_num_planilla=t11_num_planilla and cab_per_pension_mes=t11_mes_pension and cab_per_pension_ano=t11_ano_pension and cab_num_ide=t11_num_ide_aport and cab_tipo_planilla=t11_tipo_planilla and cab_sucursal=t11_sucursal and cab_per_pension_ano in ('2024') and cab_tipo_ide in ('CC','NI','CE','CD','TI','PE','PA') and cab_num_ide='" + txtAportante.getText() + "' order by cab_per_pension_ano,cab_per_pension_mes;";
                    txtVisualizar.setText(consulta);
                } else if (txtAportante.getText().length()>0 && jlPeriodo.isSelectedIndex(1)){
                    consulta = "select cab_fecha_trab, cab_fecha_vencimiento, cab_usuario, cab_num_planilla as planilla, cab_pin as pin, cab_tipo_planilla as tipo, cab_tipo_ide as tip, cab_num_ide as num, cab_sucursal as suc, cab_estado as estado, cab_indpago as ind, cab_per_pension_ano as ano, cab_per_pension_mes as mes, t11_total_salud as salud, t11_total_pension as pension, t11_total_arp as arp, t11_total_ccf as ccf, t11_gran_total as total_pago, cab_fecha_pago as fecha_pago, cab_hora_trab_pago as hora_pago, cab_entidad_recaudo entidad_recaudo, cab_clase_entidad as clase_entidad from cabeza_planilla,registro_tipo_11 where cab_num_planilla=t11_num_planilla and cab_per_pension_mes=t11_mes_pension and cab_per_pension_ano=t11_ano_pension and cab_num_ide=t11_num_ide_aport and cab_tipo_planilla=t11_tipo_planilla and cab_sucursal=t11_sucursal and cab_per_pension_ano in ('2025') and cab_tipo_ide in ('CC','NI','CE','CD','TI','PE','PA') and cab_num_ide='" + txtAportante.getText() + "' order by cab_per_pension_ano,cab_per_pension_mes;";
                    txtVisualizar.setText(consulta);
                //no funciona revisar
                } else if (txtAportante.getText().length()>0 && jlPeriodo.isSelectedIndex(2)){
                    consulta = "select cab_fecha_trab, cab_fecha_vencimiento, cab_usuario, cab_num_planilla as planilla, cab_pin as pin, cab_tipo_planilla as tipo, cab_tipo_ide as tip, cab_num_ide as num, cab_sucursal as suc, cab_estado as estado, cab_indpago as ind, cab_per_pension_ano as ano, cab_per_pension_mes as mes, t11_total_salud as salud, t11_total_pension as pension, t11_total_arp as arp, t11_total_ccf as ccf, t11_gran_total as total_pago, cab_fecha_pago as fecha_pago, cab_hora_trab_pago as hora_pago, cab_entidad_recaudo entidad_recaudo, cab_clase_entidad as clase_entidad from cabeza_planilla,registro_tipo_11 where cab_num_planilla=t11_num_planilla and cab_per_pension_mes=t11_mes_pension and cab_per_pension_ano=t11_ano_pension and cab_num_ide=t11_num_ide_aport and cab_tipo_planilla=t11_tipo_planilla and cab_sucursal=t11_sucursal and cab_per_pension_ano in ('2024','2025') and cab_tipo_ide in ('CC','NI','CE','CD','TI','PE','PA') and cab_num_ide='" + txtAportante.getText() + "' order by cab_per_pension_ano,cab_per_pension_mes;";
                    txtVisualizar.setText(consulta);
                } else {
                    JOptionPane.showMessageDialog(null, "Escriba parámetros completos para poder generar.", "Validación", 1);
                    txtAportante.requestFocus();

                }
            break;

            case 1:
                consulta="Select current_timestamp as \"FECHA Y HR. ACTUAL\", to_char(count(*),'fm999,999,999') as \"No. PLANILLAS\", lpad(to_char(sum(t11_gran_total),'fm$ 999G999G999G999'),20,' ') as \"TOTAL PAGADO\", cab_estado as \"ESTADO PLANILLA\", cab_hora_trab_pago as \"HORA DISPERSION\", cab_entidad_recaudo as \"ENTIDAD\", cab_clase_entidad as \"CLASE ENTIDAD\", cab_fecha_pago as \"FECHA PAGO\" from cabeza_planilla inner join registro_tipo_11 on cab_num_planilla = t11_num_planilla and cab_sucursal = t11_sucursal and cab_per_pension_ano = t11_ano_pension and cab_per_pension_mes = t11_mes_pension and cab_tipo_planilla = t11_tipo_planilla where cab_fecha_pago = current_date and cab_estado in ('2','3') and cab_entidad_recaudo = 'DAVIVI' group by cab_estado, cab_hora_trab_pago, cab_clase_entidad, cab_fecha_trab_pago, cab_entidad_recaudo, cab_fecha_pago order by cab_fecha_trab_pago, cab_hora_trab_pago;" +
                        "\n \nselect current_timestamp as \"FECHA Y HR. ACTUAL\", count(*) as \"Total_Planillas\", lpad(to_char(sum(t11_gran_total),'fm$ 999G999G999G999'),20,' ') as \"TOTAL PAGADO\" from cabeza_planilla inner join registro_tipo_11 on cab_num_planilla = t11_num_planilla and cab_sucursal = t11_sucursal and cab_per_pension_ano = t11_ano_pension and cab_per_pension_mes = t11_mes_pension and cab_tipo_planilla = t11_tipo_planilla where cab_fecha_pago = current_date and cab_estado in ('2','3') and cab_entidad_recaudo='DAVIVI';" + "\n" + "\n" + CargarTxt("/4.6.1.1.1_Trabajo/SOPORTE_DISPERSIONES/NOMBRES/Carlos_Bernal/Sentencias/dist/archivos/validaciones.txt");
                txtVisualizar.setText(consulta);
            break;

            case 2:
                consulta="SELECT * FROM parametros WHERE par_codigo in ('8','9');" +
                        "\n \nUPDATE  parametros SET par_valor ='T' WHERE par_codigo in ('8') and par_nombre='identificadorArchivoDav';"+
                        "\n \nUPDATE  parametros SET par_valor ='200000' WHERE par_codigo in ('9') and par_nombre='secuenciaDetTransacDav';"+
                        "\n \nSELECT * FROM parametros WHERE par_codigo in ('8','9');";

                txtVisualizar.setText(consulta);
            break;


            case 3:
                if (txtAportante.getText().length()>0) {
                    consulta = "select cab_fecha_trab, cab_fecha_vencimiento, cab_usuario, cab_num_planilla as planilla, cab_pin as pin, cab_tipo_planilla as tipo, cab_tipo_ide as tip, cab_num_ide as num, cab_sucursal as suc, cab_estado as estado, cab_indpago as ind, cab_per_pension_ano as ano, cab_per_pension_mes as mes, t11_total_salud as salud, t11_total_pension as pension, t11_total_arp as arp, t11_total_ccf as ccf, t11_gran_total as total_pago, cab_fecha_pago as fecha_pago, cab_hora_trab_pago as hora_pago, cab_entidad_recaudo entidad_recaudo, cab_clase_entidad as clase_entidad from cabeza_planilla,registro_tipo_11 where cab_num_planilla=t11_num_planilla and cab_per_pension_mes=t11_mes_pension and cab_per_pension_ano=t11_ano_pension and cab_num_ide=t11_num_ide_aport and cab_tipo_planilla=t11_tipo_planilla and cab_sucursal=t11_sucursal and cab_per_pension_ano in ('2024') and cab_tipo_ide in ('CC','NI','CE','CD','TI','PE','PA') and cab_num_ide='" + txtAportante.getText() + "' order by cab_per_pension_ano,cab_per_pension_mes;" +
                        "\n \nselect pre_celular, * from pre_registro where pre_numide ='" + txtAportante.getText() + "';";

                    txtVisualizar.setText(consulta);
                } else {
                    JOptionPane.showMessageDialog(null, "Escriba parámetros completos para poder generar.", "Validación", 1);
                    txtAportante.requestFocus();
                }

            break;

            case 4:
                if (txtAportante.getText().length()==0){
                    JOptionPane.showMessageDialog(null, "Escriba parámetros completos para poder generar.", "Validación", 1);
                    txtAportante.requestFocus();
                } else {
                    consulta = "select * from planillas where pla_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from cabeza_planilla where cab_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from liquidacion_Detallada  where liq_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_3  where t3_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_3_1  where t3_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_4  where t4_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_4_1  where t4_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_5  where t5_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_5_1  where t5_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_6  where t6_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_6_1  where t6_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_7  where t7_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_7_1  where t7_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_8  where t8_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_8_1  where t8_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_9  where t9_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_9_1  where t9_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_10  where t10_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_10_1  where t10_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_11 where t11_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_11_1 where t11_num_planilla='"+txtAportante.getText()+"';";
                    txtVisualizar.setText(consulta);
                }

            break;

            case 5:
                if (txtAportante.getText().length()>0){
                    consulta="delete  from registro_tipo_11_1 where t11_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_11 where t11_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_10_1  where t10_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_10  where t10_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_9_1  where t9_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_9  where t9_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_8_1  where t8_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_8  where t8_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_7_1  where t7_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_7  where t7_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_6_1  where t6_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_6  where t6_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_5_1  where t5_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_5  where t5_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_4_1  where t4_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_4  where t4_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_3_1  where t3_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_3  where t3_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from liquidacion_Detallada  where liq_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from cabeza_planilla where cab_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from planillas where pla_num_planilla='"+txtAportante.getText()+"';";
                    txtVisualizar.setText(consulta);
                } else {
                    JOptionPane.showMessageDialog(null, "Escriba parámetros completos para poder generar.", "Validación", 1);
                    txtAportante.requestFocus();
                }

            break;

            case 6:
                if (txtAportante.getText().length()>0){
                    consulta ="select * from planillas where pla_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from cabeza_planilla where cab_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from liquidacion_Detallada  where liq_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_3  where t3_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_4  where t4_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_5  where t5_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_6  where t6_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_7  where t7_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_8  where t8_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_9  where t9_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_10  where t10_num_planilla='"+txtAportante.getText()+"';\n" +
                        "select * from registro_tipo_11 where t11_num_planilla='"+txtAportante.getText()+"';";
                    txtVisualizar.setText(consulta);
                } else {
                    JOptionPane.showMessageDialog(null, "Escriba parámetros completos para poder generar.", "Validación", 1);
                    txtAportante.requestFocus();
                }

            break;

            case 7:
                if (txtAportante.getText().length()>0){
                    consulta="delete  from registro_tipo_11 where t11_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_10  where t10_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_9  where t9_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_8  where t8_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_7  where t7_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_6  where t6_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_5  where t5_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_4  where t4_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from registro_tipo_3  where t3_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from liquidacion_Detallada  where liq_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from cabeza_planilla where cab_num_planilla='"+txtAportante.getText()+"';\n" +
                        "delete  from planillas where pla_num_planilla='"+txtAportante.getText()+"';";

                    txtVisualizar.setText(consulta);
                } else {
                    JOptionPane.showMessageDialog(null, "Escriba parámetros completos para poder generar.", "Validación", 1);
                    txtAportante.requestFocus();
                }

            break;

            case 8:
                if (txtAportante.getText().length()>0) {
                    consulta="select * from planillas where pla_num_planilla='"+txtAportante.getText()+"';\n" +
                    "select * from cabeza_planilla_pen where cab_num_planilla='"+txtAportante.getText()+"';\n" +
                    "select * from liquidacion_Detallada_pen  where liq_num_planilla='"+txtAportante.getText()+"';\n" +
                    "select * from registro_tipo_3_pen  where t3_num_planilla='"+txtAportante.getText()+"';\n" +
                    "select * from registro_tipo_4_pen  where t4_num_planilla='"+txtAportante.getText()+"';\n" +
                    "select * from registro_tipo_5_pen  where t5_num_planilla='"+txtAportante.getText()+"';\n" +
                    "select * from registro_tipo_6_pen  where t6_num_planilla='"+txtAportante.getText()+"';\n" +
                    "select * from registro_tipo_7_pen  where t7_num_planilla='"+txtAportante.getText()+"';";

                    txtVisualizar.setText(consulta);
                } else {
                    JOptionPane.showMessageDialog(null, "Escriba parámetros completos para poder generar.", "Validación", 1);
                    txtAportante.requestFocus();
                }
            break;

            case 9:
            if (txtAportante.getText().length()>0) {
                    consulta="delete from registro_tipo_3_pen  where t3_num_planilla='"+txtAportante.getText()+"';\n" +
                    "delete from registro_tipo_4_pen  where t4_num_planilla='"+txtAportante.getText()+"';\n" +
                    "delete from registro_tipo_5_pen  where t5_num_planilla='"+txtAportante.getText()+"';\n" +
                    "delete from registro_tipo_6_pen  where t6_num_planilla='"+txtAportante.getText()+"';\n" +
                    "delete from registro_tipo_7_pen  where t7_num_planilla='"+txtAportante.getText()+"';\n" +
                    "delete from liquidacion_Detallada_pen  where liq_num_planilla='"+txtAportante.getText()+"';\n" +
                    "delete from cabeza_planilla_pen where cab_num_planilla='"+txtAportante.getText()+"';\n" +
                    "delete from planillas where pla_num_planilla='"+txtAportante.getText()+"';";

                    txtVisualizar.setText(consulta);
                } else {
                    JOptionPane.showMessageDialog(null, "Escriba parámetros completos para poder generar.", "Validación", 1);
                    txtAportante.requestFocus();
                }
            break;

            case 10:
            if (txtAportante.getText().length()>0) {
                    consulta="select * from cabeza_cesantias where numero_planilla='"+txtAportante.getText()+"';\n" +
                    "select * from detalle_cesantias where numero_planilla='"+txtAportante.getText()+"';\n" +
                    "select * from total_cesantias where numero_planilla='"+txtAportante.getText()+"';";

                    txtVisualizar.setText(consulta);
                } else {
                    JOptionPane.showMessageDialog(null, "Escriba parámetros completos para poder generar.", "Validación", 1);
                    txtAportante.requestFocus();
                }
            break;

            case 11:
            if (txtAportante.getText().length()>0) {
                    consulta="delete from detalle_cesantias where numero_planilla='"+txtAportante.getText()+"';\n" +
                    "delete from total_cesantias where numero_planilla='"+txtAportante.getText()+"';\n" +
                    "delete from cabeza_cesantias where numero_planilla='"+txtAportante.getText()+"';";

                    txtVisualizar.setText(consulta);
                } else {
                    JOptionPane.showMessageDialog(null, "Escriba parámetros completos para poder generar.", "Validación", 1);
                    txtAportante.requestFocus();
                }
            break;

            case 12:
            	try {
                    Process process1 = Runtime.getRuntime().exec("bash /4.6.1.1.1_Trabajo/SOPORTE_DISPERSIONES/NOMBRES/Carlos_Bernal/carpetas.sh");
                    BufferedReader input = new BufferedReader(new InputStreamReader(process1.getInputStream()));
                    String line = input.readLine();

                    while (line != null) {
                        txtVisualizar.append(line + "\n");
                        line = input.readLine();
                    }
                } catch (IOException ex) {
                    Logger.getLogger(sentencias.class.getName()).log(Level.SEVERE, null, ex);
                }
            break;
            
            case 13:
            	try {
                    Process process2 = Runtime.getRuntime().exec("bash /4.6.1.1.1_Trabajo/SOPORTE_DISPERSIONES/NOMBRES/Carlos_Bernal/Validacion/Validacion_Crear_Carpetas1.sh");
                    BufferedReader input1 = new BufferedReader(new InputStreamReader(process2.getInputStream()));
                    String line1 = input1.readLine();

                    while (line1 != null) {
                        txtVisualizar.append(line1 + "\n");
                        line1 = input1.readLine();
                    }
                } catch (IOException ex) {
                    Logger.getLogger(sentencias.class.getName()).log(Level.SEVERE, null, ex);
                }
            break;
        }

    }//GEN-LAST:event_btnGenerarActionPerformed

    private void txtAportanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAportanteKeyTyped
        char c=evt.getKeyChar();
	if(Character.isLetter(c)) {
		getToolkit().beep();
		evt.consume();
        }
    }//GEN-LAST:event_txtAportanteKeyTyped

    private void cbSentenciasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSentenciasItemStateChanged
        switch (cbSentencias.getSelectedIndex()) {
            case 0:
                DeshabilitarTodos(true);
                txtAportante.requestFocus();
            break;

            case 1:
                DeshabilitarTodos(false);
                btnGenerar.requestFocus();
            break;

            case 2:
                DeshabilitarTodos(false);
                btnGenerar.requestFocus();
            break;

            case 3:
                HabilitarAportante(true);
                txtAportante.requestFocus();
            break;

            case 4:
                HabilitarAportante(true);
                txtAportante.requestFocus();
            break;

            case 5:
                HabilitarAportante(true);
                txtAportante.requestFocus();
            break;

            case 6:
                HabilitarAportante(true);
                txtAportante.requestFocus();
            break;

            case 7:
                HabilitarAportante(true);
                txtAportante.requestFocus();
            break;

            case 8:
                HabilitarAportante(true);
                txtAportante.requestFocus();
            break;

            case 9:
                HabilitarAportante(true);
                txtAportante.requestFocus();
            break;

            case 10:
                HabilitarAportante(true);
                txtAportante.requestFocus();
            break;

            case 11:
                HabilitarAportante(true);
                txtAportante.requestFocus();
            break;

            case 12:
            	DeshabilitarTodos(true);
                btnGenerar.requestFocus();
            break;
            
            case 13:
            	DeshabilitarTodos(true);
            	btnGenerar.requestFocus();
            break;
            	
            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_cbSentenciasItemStateChanged

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        LimpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarActionPerformed
        if (txtVisualizar.getText().equals("")){
            JOptionPane.showMessageDialog(null, "El campo a copiar, esta vacio. Vuelva a intentar", "Error al copiar", 2);
            LimpiarCampos();
        } else {
            StringSelection stringSelection = new StringSelection(txtVisualizar.getText());
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
            JOptionPane.showMessageDialog(null, "Sentencia copiada en portapapeles.", "Sentencias", 1);
            LimpiarCampos();
        }
    }//GEN-LAST:event_btnCopiarActionPerformed

    Function<?, ?> HabilitarAportante(boolean Bool){
        txtAportante.setEnabled(Bool);
        jlPeriodo.setEnabled(false);
        return null;
    }

    Function<?, ?> DeshabilitarTodos(boolean Bool){
        txtAportante.setEnabled(Bool);
        jlPeriodo.setEnabled(Bool);
        return null;
    }

    Function<?, ?> LimpiarCampos(){
        cbSentencias.setSelectedIndex(0);
        txtAportante.setText(null);
        jlPeriodo.clearSelection();
        txtVisualizar.setText(null);
        cbSentencias.requestFocus();
        return null;
    }
    
    String CargarTxt(String Ubic_archivo){
    	String texto = new String();
    	
    	try {
	    	File f = new File(Ubic_archivo); 
	    	FileReader fr = new FileReader(f);
	    	BufferedReader entrada = new BufferedReader(fr);
	    	String s;
	    	
	    	while((s = entrada.readLine()) != null) {    		
	    		texto = texto + s + "\n";
	    		txtVisualizar.append(texto);
	    	}
	    	
	    	entrada.close();
		
    	} catch (IOException e) {
			e.printStackTrace();
		}
		return texto;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sentencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sentencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sentencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sentencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
			public void run() {
                new sentencias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopiar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cbSentencias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> jlPeriodo;
    private javax.swing.JLabel lblSentencias;
    private javax.swing.JTextField txtAportante;
    private javax.swing.JTextArea txtVisualizar;
}
